name: Deploy

on:
  push:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  create-release:
    name: Create Release
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Create release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: hub release create -d -m "Build ${{github.run_number}}" ${GITHUB_REF##*/}
      
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Checkout Sowa
      uses: actions/checkout@v3
      with:
        repository: sowaengine/sowa
        ref: develop
        path: sowa
        clean: false
        
    - name: Setup emscripten
      uses: mymindstorm/setup-emsdk@v11
      with:
        version: latest
        
    - name: Check dependencies
      run: |
        python3 --version
        python --version
        cmake --version
        emcc -v
        printf ${{ env.EMSDK }}
        cat ${{env.EMSDK}}/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake
      
    - name: Configure
      working-directory: sowa
      run: |
        mkdir build
        mkdir package
        cmake -S . -B build -G "Unix Makefiles" -DCMAKE_TOOLCHAIN_FILE=${{env.EMSDK}}/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake
    
    - name: Build
      working-directory: sowa
      run: |
        cmake --build build/ --config Release --parallel 4

    - name: Package
      shell: bash
      working-directory: sowa/build
      run: cpack
    
    - name: "Generate artifact name"
      id: artifact-name
      run: |
        echo "path=$(find sowa/package/ -maxdepth 1 -type f -printf ' %p ' -o -name '*.tar.gz')" >> $GITHUB_OUTPUT
        cat $GITHUB_OUTPUT

    - name: "Upload release assets"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        hub release edit -a ${{ steps.artifact-name.outputs.path }} -m "" ${GITHUB_REF##*/}
    
    - name: "Upload artifact"
      uses: actions/upload-pages-artifact@v1
      with:
        path: ${{github.workspace}}/${{ steps.artifact-name.outputs.path }}
  
  deploy:
    environment:
      name: "github-pages"
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "Deploy to Github Pages"
        id: deployment
        uses: actions/deploy-pages@v2

      
